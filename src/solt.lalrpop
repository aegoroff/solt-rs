use crate::{OpCode};

grammar;

pub Solution = <Line*>;

Line = {
    HeaderLine,
};

HeaderLine = {
    FirstLine,
    Version,
};

FirstLine : OpCode = <Word+> => OpCode::FirstLine;

Version : OpCode = {
    Identifier Eq Rvalue => OpCode::Version(<>.to_string(), <>.to_string()),
};

Rvalue : OpCode = {
    Identifier,
    DigitOrDot,
};

Word = {
    Identifier,
    Comma,
    DigitOrDot,
};

Comma: OpCode = {
    "," => OpCode::Comma,
};

Eq: OpCode = {
    "=" => OpCode::Eq,
};

DigitOrDot: OpCode = {
    r"[.0-9]+" => OpCode::DigitOrDot(<>.to_string()),
};

Identifier: OpCode = r"[a-zA-Z]+" => OpCode::Identifier(<>.to_string());