use crate::{Expr};

grammar;

pub Solution = <Line> <Line*>;

Line = {
    <HeaderLine>,
    <ProjectBegin>,
    <ProjectEnd>,
    <ProjectSectionBegin>,
    <ProjectSectionContent>,
    <ProjectSectionEnd>,
};

HeaderLine = {
    <FirstLine>,
    <Version>,
    <Comment>,
};

FirstLine : Expr = <Word> <Word*> "," <Word*> <DigitOrDot> => Expr::FirstLine;

Version : Expr = {
    <id:Identifier> "=" <r:Rvalue> => {
        let name = match id {
            Expr::Identifier(s) => s,
            _ => String::new(),
        };

        let val = match r {
            Expr::DigitOrDot(s) => s,
            _ => String::new(),
        };

        Expr::Version(name, val)
    },
};

ProjectBegin : Expr = {
    "Project" <t:ProjectType> "=" <n:Str> "," <p:Str> "," <id:Str> => {
        Expr::ProjectBegin(Box::new(t),Box::new(n),Box::new(p),Box::new(id))
    },
};

ProjectSectionBegin : Expr = {
    "ProjectSection" "(" <name:Identifier> ")" "=" <stage:Identifier> => {
        Expr::ProjectSectionBegin(Box::new(name),Box::new(stage))
    },
};

ProjectEnd : Expr = {
    "EndProject" => Expr::ProjectEnd,
};

ProjectSectionEnd : Expr = {
    "EndProjectSection" => Expr::ProjectSectionEnd,
};

ProjectSectionContent : Expr = {
    <k:Guid> "=" <v:Guid> => {
        Expr::ProjectSectionContent(Box::new(k), Box::new(v))
    },
};

ProjectType : Expr = {
        "(" <g:Str> ")" => {
            let val = match g {
                    Expr::Str(s) => s,
                    _ => String::new(),
            };

            Expr::ProjectType(val)
        },
};

Rvalue : Expr = {
    <Identifier>,
    <DigitOrDot>,
};

Word = {
    <Identifier>,
};

Comment : Expr =  r"#[^\n]*" => Expr::Comment(<>.to_string());

DigitOrDot: Expr = r"[.0-9]+" => Expr::DigitOrDot(<>.to_string());

Guid: Expr = {
   "{" r"[[:alnum:]]{8}-[[:alnum:]]{4}-[[:alnum:]]{4}-[[:alnum:]]{4}-[[:alnum:]]{12}" "}" => Expr::Guid((<>).1.to_string()),
};

Identifier: Expr = r"[a-zA-Z]+" => Expr::Identifier(<>.to_string());

Str: Expr =  r#""[^"]+""# => Expr::Str(<>.to_string());
